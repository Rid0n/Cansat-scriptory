
Hydrogenics.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000007a8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001c  00800060  000007a8  0000083c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000005  0080007c  0080007c  00000858  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000858  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000008b4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  000008f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e23  00000000  00000000  00000960  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000661  00000000  00000000  00001783  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000060a  00000000  00000000  00001de4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000d8  00000000  00000000  000023f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003e0  00000000  00000000  000024c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000087d  00000000  00000000  000028a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  00003125  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	e8 ea       	ldi	r30, 0xA8	; 168
  3a:	f7 e0       	ldi	r31, 0x07	; 7
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	ac 37       	cpi	r26, 0x7C	; 124
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	20 e0       	ldi	r18, 0x00	; 0
  4a:	ac e7       	ldi	r26, 0x7C	; 124
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a1 38       	cpi	r26, 0x81	; 129
  54:	b2 07       	cpc	r27, r18
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	6c d0       	rcall	.+216    	; 0x132 <main>
  5a:	a4 c3       	rjmp	.+1864   	; 0x7a4 <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <i2c_stop_cond>:
	I2C_DDR |= _BV(SCL); // притянуть SCL (лог.0)
	I2C_DELAY
	I2C_DDR &= ~_BV(SDA); // отпустить SDA (лог.1)

	return res; // вернуть считанное значение
}
  5e:	a5 9a       	sbi	0x14, 5	; 20
  60:	82 e0       	ldi	r24, 0x02	; 2
  62:	8a 95       	dec	r24
  64:	f1 f7       	brne	.-4      	; 0x62 <i2c_stop_cond+0x4>
  66:	00 c0       	rjmp	.+0      	; 0x68 <i2c_stop_cond+0xa>
  68:	a4 9a       	sbi	0x14, 4	; 20
  6a:	82 e0       	ldi	r24, 0x02	; 2
  6c:	8a 95       	dec	r24
  6e:	f1 f7       	brne	.-4      	; 0x6c <i2c_stop_cond+0xe>
  70:	00 c0       	rjmp	.+0      	; 0x72 <i2c_stop_cond+0x14>
  72:	a5 98       	cbi	0x14, 5	; 20
  74:	82 e0       	ldi	r24, 0x02	; 2
  76:	8a 95       	dec	r24
  78:	f1 f7       	brne	.-4      	; 0x76 <i2c_stop_cond+0x18>
  7a:	00 c0       	rjmp	.+0      	; 0x7c <i2c_stop_cond+0x1e>
  7c:	a4 98       	cbi	0x14, 4	; 20
  7e:	82 e0       	ldi	r24, 0x02	; 2
  80:	8a 95       	dec	r24
  82:	f1 f7       	brne	.-4      	; 0x80 <i2c_stop_cond+0x22>
  84:	00 c0       	rjmp	.+0      	; 0x86 <i2c_stop_cond+0x28>
  86:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__data_end>
  8a:	9c 99       	sbic	0x13, 4	; 19
  8c:	05 c0       	rjmp	.+10     	; 0x98 <i2c_stop_cond+0x3a>
  8e:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__data_end>
  92:	8f 5f       	subi	r24, 0xFF	; 255
  94:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__data_end>
  98:	9d 99       	sbic	0x13, 5	; 19
  9a:	05 c0       	rjmp	.+10     	; 0xa6 <i2c_stop_cond+0x48>
  9c:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__data_end>
  a0:	8f 5f       	subi	r24, 0xFF	; 255
  a2:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__data_end>
  a6:	82 e0       	ldi	r24, 0x02	; 2
  a8:	8a 95       	dec	r24
  aa:	f1 f7       	brne	.-4      	; 0xa8 <i2c_stop_cond+0x4a>
  ac:	00 c0       	rjmp	.+0      	; 0xae <i2c_stop_cond+0x50>
  ae:	82 e0       	ldi	r24, 0x02	; 2
  b0:	8a 95       	dec	r24
  b2:	f1 f7       	brne	.-4      	; 0xb0 <i2c_stop_cond+0x52>
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <i2c_stop_cond+0x58>
  b6:	82 e0       	ldi	r24, 0x02	; 2
  b8:	8a 95       	dec	r24
  ba:	f1 f7       	brne	.-4      	; 0xb8 <i2c_stop_cond+0x5a>
  bc:	00 c0       	rjmp	.+0      	; 0xbe <i2c_stop_cond+0x60>
  be:	82 e0       	ldi	r24, 0x02	; 2
  c0:	8a 95       	dec	r24
  c2:	f1 f7       	brne	.-4      	; 0xc0 <i2c_stop_cond+0x62>
  c4:	00 c0       	rjmp	.+0      	; 0xc6 <i2c_stop_cond+0x68>
  c6:	08 95       	ret

000000c8 <i2c_init>:
  c8:	a4 98       	cbi	0x14, 4	; 20
  ca:	a5 98       	cbi	0x14, 5	; 20
  cc:	ac 98       	cbi	0x15, 4	; 21
  ce:	ad 98       	cbi	0x15, 5	; 21
  d0:	c6 df       	rcall	.-116    	; 0x5e <i2c_stop_cond>
  d2:	c5 df       	rcall	.-118    	; 0x5e <i2c_stop_cond>
  d4:	08 95       	ret

000000d6 <init_adc>:
#include <avr/interrupt.h>
#include "i2c.h"

void init_adc()
{
	ADMUX = 0b01000000; //выбираем источник питания АЦП
  d6:	80 e4       	ldi	r24, 0x40	; 64
  d8:	87 b9       	out	0x07, r24	; 7
	ADCSRA |=(1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0); // устанавливаем предделитель
  da:	86 b1       	in	r24, 0x06	; 6
  dc:	87 60       	ori	r24, 0x07	; 7
  de:	86 b9       	out	0x06, r24	; 6
	ADCSRA |=(1 << ADEN); // Включаем АЦП
  e0:	37 9a       	sbi	0x06, 7	; 6
  e2:	08 95       	ret

000000e4 <read_adc>:
}

// Функция запуска преобразования АЦП и чтения результата
unsigned int read_adc (unsigned char adc_input)
{
	ADMUX |=0x07 & adc_input; //определяем на какой ножке измеряем V
  e4:	97 b1       	in	r25, 0x07	; 7
  e6:	87 70       	andi	r24, 0x07	; 7
  e8:	98 2b       	or	r25, r24
  ea:	97 b9       	out	0x07, r25	; 7
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ec:	8a e1       	ldi	r24, 0x1A	; 26
  ee:	8a 95       	dec	r24
  f0:	f1 f7       	brne	.-4      	; 0xee <read_adc+0xa>
  f2:	00 c0       	rjmp	.+0      	; 0xf4 <read_adc+0x10>
	//0?07-ограничение (можем мереть напряжение на одной из восьми ножек)
	//0?07-это значит отказываемся использовать дифференциальные входы
	//если написать ADMUX|=0x1F&adc_input; -разрешаем исп. как диференц так и не диференц входы
	_delay_us(10);                       // Задержка на установление опорного напряжения
	ADCSRA |= (1 << ADSC);              // Запуск преобразования АЦП
  f4:	36 9a       	sbi	0x06, 6	; 6
	while ((ADCSRA & (1 << ADIF))==0); // Ожидание окончания преобразования
  f6:	34 9b       	sbis	0x06, 4	; 6
  f8:	fe cf       	rjmp	.-4      	; 0xf6 <read_adc+0x12>
	return ADCW;
  fa:	84 b1       	in	r24, 0x04	; 4
  fc:	95 b1       	in	r25, 0x05	; 5
}
  fe:	08 95       	ret

00000100 <init_USART>:
void init_USART()
{
	UBRRL= UBRRL_value;
 100:	83 e3       	ldi	r24, 0x33	; 51
 102:	89 b9       	out	0x09, r24	; 9
	(UBRRH) = (UBRRL_value) >> 8;
 104:	10 bc       	out	0x20, r1	; 32
	UCSRB |= (1<<RXEN)|(1<<TXEN);
 106:	8a b1       	in	r24, 0x0a	; 10
 108:	88 61       	ori	r24, 0x18	; 24
 10a:	8a b9       	out	0x0a, r24	; 10
	UCSRC = (1<<URSEL)|(1<<USBS)|(3<<UCSZ0);
 10c:	8e e8       	ldi	r24, 0x8E	; 142
 10e:	80 bd       	out	0x20, r24	; 32
 110:	08 95       	ret

00000112 <Uart_tr>:

}
void Uart_tr (char s[])
{
 112:	dc 01       	movw	r26, r24
	unsigned char k;
	for (k=0;s[k]!=0;k++)
 114:	9c 91       	ld	r25, X
 116:	99 23       	and	r25, r25
 118:	59 f0       	breq	.+22     	; 0x130 <Uart_tr+0x1e>
 11a:	20 e0       	ldi	r18, 0x00	; 0
	{
		UDR =s[k];
 11c:	9c b9       	out	0x0c, r25	; 12
		while (!(UCSRA&(1<<UDRE)));
 11e:	5d 9b       	sbis	0x0b, 5	; 11
 120:	fe cf       	rjmp	.-4      	; 0x11e <Uart_tr+0xc>

}
void Uart_tr (char s[])
{
	unsigned char k;
	for (k=0;s[k]!=0;k++)
 122:	2f 5f       	subi	r18, 0xFF	; 255
 124:	fd 01       	movw	r30, r26
 126:	e2 0f       	add	r30, r18
 128:	f1 1d       	adc	r31, r1
 12a:	90 81       	ld	r25, Z
 12c:	91 11       	cpse	r25, r1
 12e:	f6 cf       	rjmp	.-20     	; 0x11c <Uart_tr+0xa>
 130:	08 95       	ret

00000132 <main>:


int32_t hydroconcent;

int main(void)
{
 132:	cf 93       	push	r28
 134:	df 93       	push	r29
 136:	cd b7       	in	r28, 0x3d	; 61
 138:	de b7       	in	r29, 0x3e	; 62
 13a:	c0 5f       	subi	r28, 0xF0	; 240
 13c:	d1 09       	sbc	r29, r1
 13e:	0f b6       	in	r0, 0x3f	; 63
 140:	f8 94       	cli
 142:	de bf       	out	0x3e, r29	; 62
 144:	0f be       	out	0x3f, r0	; 63
 146:	cd bf       	out	0x3d, r28	; 61
	char hey[120];
	char hydro[120];
	i2c_init();
 148:	bf df       	rcall	.-130    	; 0xc8 <i2c_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 14a:	2f ef       	ldi	r18, 0xFF	; 255
 14c:	84 e3       	ldi	r24, 0x34	; 52
 14e:	9c e0       	ldi	r25, 0x0C	; 12
 150:	21 50       	subi	r18, 0x01	; 1
 152:	80 40       	sbci	r24, 0x00	; 0
 154:	90 40       	sbci	r25, 0x00	; 0
 156:	e1 f7       	brne	.-8      	; 0x150 <main+0x1e>
 158:	00 c0       	rjmp	.+0      	; 0x15a <main+0x28>
 15a:	00 00       	nop
	_delay_ms(500);
	init_adc();
 15c:	bc df       	rcall	.-136    	; 0xd6 <init_adc>
 15e:	2f ef       	ldi	r18, 0xFF	; 255
 160:	84 e3       	ldi	r24, 0x34	; 52
 162:	9c e0       	ldi	r25, 0x0C	; 12
 164:	21 50       	subi	r18, 0x01	; 1
 166:	80 40       	sbci	r24, 0x00	; 0
 168:	90 40       	sbci	r25, 0x00	; 0
 16a:	e1 f7       	brne	.-8      	; 0x164 <main+0x32>
 16c:	00 c0       	rjmp	.+0      	; 0x16e <main+0x3c>
 16e:	00 00       	nop
	_delay_ms(500);
	init_USART();
 170:	c7 df       	rcall	.-114    	; 0x100 <init_USART>
    /* Replace with your application code */
    while (1) 
    {
		sprintf(hey, "hey");
 172:	0f 2e       	mov	r0, r31
 174:	f8 e6       	ldi	r31, 0x68	; 104
 176:	af 2e       	mov	r10, r31
 178:	f5 e6       	ldi	r31, 0x65	; 101
 17a:	bf 2e       	mov	r11, r31
 17c:	f0 2d       	mov	r31, r0
 17e:	0f 2e       	mov	r0, r31
 180:	f9 e7       	ldi	r31, 0x79	; 121
 182:	cf 2e       	mov	r12, r31
 184:	d1 2c       	mov	r13, r1
 186:	f0 2d       	mov	r31, r0
		Uart_tr(hey);
		hydroconcent = read_adc(0);
		sprintf(hydro, "Hydrogen concentration: %ld", hydroconcent);
 188:	0f 2e       	mov	r0, r31
 18a:	f0 e6       	ldi	r31, 0x60	; 96
 18c:	ef 2e       	mov	r14, r31
 18e:	f0 e0       	ldi	r31, 0x00	; 0
 190:	ff 2e       	mov	r15, r31
 192:	f0 2d       	mov	r31, r0
 194:	8e 01       	movw	r16, r28
 196:	07 58       	subi	r16, 0x87	; 135
 198:	1f 4f       	sbci	r17, 0xFF	; 255
	_delay_ms(500);
	init_USART();
    /* Replace with your application code */
    while (1) 
    {
		sprintf(hey, "hey");
 19a:	ba 82       	std	Y+2, r11	; 0x02
 19c:	a9 82       	std	Y+1, r10	; 0x01
 19e:	dc 82       	std	Y+4, r13	; 0x04
 1a0:	cb 82       	std	Y+3, r12	; 0x03
		Uart_tr(hey);
 1a2:	ce 01       	movw	r24, r28
 1a4:	01 96       	adiw	r24, 0x01	; 1
 1a6:	b5 df       	rcall	.-150    	; 0x112 <Uart_tr>
		hydroconcent = read_adc(0);
 1a8:	80 e0       	ldi	r24, 0x00	; 0
 1aa:	9c df       	rcall	.-200    	; 0xe4 <read_adc>
 1ac:	a0 e0       	ldi	r26, 0x00	; 0
 1ae:	b0 e0       	ldi	r27, 0x00	; 0
 1b0:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <hydroconcent>
 1b4:	90 93 7e 00 	sts	0x007E, r25	; 0x80007e <hydroconcent+0x1>
 1b8:	a0 93 7f 00 	sts	0x007F, r26	; 0x80007f <hydroconcent+0x2>
 1bc:	b0 93 80 00 	sts	0x0080, r27	; 0x800080 <hydroconcent+0x3>
		sprintf(hydro, "Hydrogen concentration: %ld", hydroconcent);
 1c0:	1f 92       	push	r1
 1c2:	1f 92       	push	r1
 1c4:	9f 93       	push	r25
 1c6:	8f 93       	push	r24
 1c8:	ff 92       	push	r15
 1ca:	ef 92       	push	r14
 1cc:	1f 93       	push	r17
 1ce:	0f 93       	push	r16
 1d0:	11 d0       	rcall	.+34     	; 0x1f4 <sprintf>
		Uart_tr(hydro);
 1d2:	c8 01       	movw	r24, r16
 1d4:	9e df       	rcall	.-196    	; 0x112 <Uart_tr>
 1d6:	2f ef       	ldi	r18, 0xFF	; 255
 1d8:	89 e6       	ldi	r24, 0x69	; 105
 1da:	98 e1       	ldi	r25, 0x18	; 24
 1dc:	21 50       	subi	r18, 0x01	; 1
 1de:	80 40       	sbci	r24, 0x00	; 0
 1e0:	90 40       	sbci	r25, 0x00	; 0
 1e2:	e1 f7       	brne	.-8      	; 0x1dc <main+0xaa>
 1e4:	00 c0       	rjmp	.+0      	; 0x1e6 <main+0xb4>
 1e6:	00 00       	nop
 1e8:	0f b6       	in	r0, 0x3f	; 63
 1ea:	f8 94       	cli
 1ec:	de bf       	out	0x3e, r29	; 62
 1ee:	0f be       	out	0x3f, r0	; 63
 1f0:	cd bf       	out	0x3d, r28	; 61
 1f2:	d3 cf       	rjmp	.-90     	; 0x19a <main+0x68>

000001f4 <sprintf>:
 1f4:	ae e0       	ldi	r26, 0x0E	; 14
 1f6:	b0 e0       	ldi	r27, 0x00	; 0
 1f8:	ef ef       	ldi	r30, 0xFF	; 255
 1fa:	f0 e0       	ldi	r31, 0x00	; 0
 1fc:	aa c2       	rjmp	.+1364   	; 0x752 <__prologue_saves__+0x1c>
 1fe:	0d 89       	ldd	r16, Y+21	; 0x15
 200:	1e 89       	ldd	r17, Y+22	; 0x16
 202:	86 e0       	ldi	r24, 0x06	; 6
 204:	8c 83       	std	Y+4, r24	; 0x04
 206:	1a 83       	std	Y+2, r17	; 0x02
 208:	09 83       	std	Y+1, r16	; 0x01
 20a:	8f ef       	ldi	r24, 0xFF	; 255
 20c:	9f e7       	ldi	r25, 0x7F	; 127
 20e:	9e 83       	std	Y+6, r25	; 0x06
 210:	8d 83       	std	Y+5, r24	; 0x05
 212:	ae 01       	movw	r20, r28
 214:	47 5e       	subi	r20, 0xE7	; 231
 216:	5f 4f       	sbci	r21, 0xFF	; 255
 218:	6f 89       	ldd	r22, Y+23	; 0x17
 21a:	78 8d       	ldd	r23, Y+24	; 0x18
 21c:	ce 01       	movw	r24, r28
 21e:	01 96       	adiw	r24, 0x01	; 1
 220:	08 d0       	rcall	.+16     	; 0x232 <vfprintf>
 222:	ef 81       	ldd	r30, Y+7	; 0x07
 224:	f8 85       	ldd	r31, Y+8	; 0x08
 226:	e0 0f       	add	r30, r16
 228:	f1 1f       	adc	r31, r17
 22a:	10 82       	st	Z, r1
 22c:	2e 96       	adiw	r28, 0x0e	; 14
 22e:	e4 e0       	ldi	r30, 0x04	; 4
 230:	ac c2       	rjmp	.+1368   	; 0x78a <__epilogue_restores__+0x1c>

00000232 <vfprintf>:
 232:	ab e0       	ldi	r26, 0x0B	; 11
 234:	b0 e0       	ldi	r27, 0x00	; 0
 236:	ee e1       	ldi	r30, 0x1E	; 30
 238:	f1 e0       	ldi	r31, 0x01	; 1
 23a:	7d c2       	rjmp	.+1274   	; 0x736 <__prologue_saves__>
 23c:	6c 01       	movw	r12, r24
 23e:	7b 01       	movw	r14, r22
 240:	8a 01       	movw	r16, r20
 242:	fc 01       	movw	r30, r24
 244:	17 82       	std	Z+7, r1	; 0x07
 246:	16 82       	std	Z+6, r1	; 0x06
 248:	83 81       	ldd	r24, Z+3	; 0x03
 24a:	81 ff       	sbrs	r24, 1
 24c:	bf c1       	rjmp	.+894    	; 0x5cc <__stack+0x16d>
 24e:	ce 01       	movw	r24, r28
 250:	01 96       	adiw	r24, 0x01	; 1
 252:	3c 01       	movw	r6, r24
 254:	f6 01       	movw	r30, r12
 256:	93 81       	ldd	r25, Z+3	; 0x03
 258:	f7 01       	movw	r30, r14
 25a:	93 fd       	sbrc	r25, 3
 25c:	85 91       	lpm	r24, Z+
 25e:	93 ff       	sbrs	r25, 3
 260:	81 91       	ld	r24, Z+
 262:	7f 01       	movw	r14, r30
 264:	88 23       	and	r24, r24
 266:	09 f4       	brne	.+2      	; 0x26a <vfprintf+0x38>
 268:	ad c1       	rjmp	.+858    	; 0x5c4 <__stack+0x165>
 26a:	85 32       	cpi	r24, 0x25	; 37
 26c:	39 f4       	brne	.+14     	; 0x27c <vfprintf+0x4a>
 26e:	93 fd       	sbrc	r25, 3
 270:	85 91       	lpm	r24, Z+
 272:	93 ff       	sbrs	r25, 3
 274:	81 91       	ld	r24, Z+
 276:	7f 01       	movw	r14, r30
 278:	85 32       	cpi	r24, 0x25	; 37
 27a:	21 f4       	brne	.+8      	; 0x284 <vfprintf+0x52>
 27c:	b6 01       	movw	r22, r12
 27e:	90 e0       	ldi	r25, 0x00	; 0
 280:	c0 d1       	rcall	.+896    	; 0x602 <fputc>
 282:	e8 cf       	rjmp	.-48     	; 0x254 <vfprintf+0x22>
 284:	91 2c       	mov	r9, r1
 286:	21 2c       	mov	r2, r1
 288:	31 2c       	mov	r3, r1
 28a:	ff e1       	ldi	r31, 0x1F	; 31
 28c:	f3 15       	cp	r31, r3
 28e:	d8 f0       	brcs	.+54     	; 0x2c6 <vfprintf+0x94>
 290:	8b 32       	cpi	r24, 0x2B	; 43
 292:	79 f0       	breq	.+30     	; 0x2b2 <vfprintf+0x80>
 294:	38 f4       	brcc	.+14     	; 0x2a4 <vfprintf+0x72>
 296:	80 32       	cpi	r24, 0x20	; 32
 298:	79 f0       	breq	.+30     	; 0x2b8 <vfprintf+0x86>
 29a:	83 32       	cpi	r24, 0x23	; 35
 29c:	a1 f4       	brne	.+40     	; 0x2c6 <vfprintf+0x94>
 29e:	23 2d       	mov	r18, r3
 2a0:	20 61       	ori	r18, 0x10	; 16
 2a2:	1d c0       	rjmp	.+58     	; 0x2de <vfprintf+0xac>
 2a4:	8d 32       	cpi	r24, 0x2D	; 45
 2a6:	61 f0       	breq	.+24     	; 0x2c0 <vfprintf+0x8e>
 2a8:	80 33       	cpi	r24, 0x30	; 48
 2aa:	69 f4       	brne	.+26     	; 0x2c6 <vfprintf+0x94>
 2ac:	23 2d       	mov	r18, r3
 2ae:	21 60       	ori	r18, 0x01	; 1
 2b0:	16 c0       	rjmp	.+44     	; 0x2de <vfprintf+0xac>
 2b2:	83 2d       	mov	r24, r3
 2b4:	82 60       	ori	r24, 0x02	; 2
 2b6:	38 2e       	mov	r3, r24
 2b8:	e3 2d       	mov	r30, r3
 2ba:	e4 60       	ori	r30, 0x04	; 4
 2bc:	3e 2e       	mov	r3, r30
 2be:	2a c0       	rjmp	.+84     	; 0x314 <vfprintf+0xe2>
 2c0:	f3 2d       	mov	r31, r3
 2c2:	f8 60       	ori	r31, 0x08	; 8
 2c4:	1d c0       	rjmp	.+58     	; 0x300 <vfprintf+0xce>
 2c6:	37 fc       	sbrc	r3, 7
 2c8:	2d c0       	rjmp	.+90     	; 0x324 <vfprintf+0xf2>
 2ca:	20 ed       	ldi	r18, 0xD0	; 208
 2cc:	28 0f       	add	r18, r24
 2ce:	2a 30       	cpi	r18, 0x0A	; 10
 2d0:	40 f0       	brcs	.+16     	; 0x2e2 <vfprintf+0xb0>
 2d2:	8e 32       	cpi	r24, 0x2E	; 46
 2d4:	b9 f4       	brne	.+46     	; 0x304 <vfprintf+0xd2>
 2d6:	36 fc       	sbrc	r3, 6
 2d8:	75 c1       	rjmp	.+746    	; 0x5c4 <__stack+0x165>
 2da:	23 2d       	mov	r18, r3
 2dc:	20 64       	ori	r18, 0x40	; 64
 2de:	32 2e       	mov	r3, r18
 2e0:	19 c0       	rjmp	.+50     	; 0x314 <vfprintf+0xe2>
 2e2:	36 fe       	sbrs	r3, 6
 2e4:	06 c0       	rjmp	.+12     	; 0x2f2 <vfprintf+0xc0>
 2e6:	8a e0       	ldi	r24, 0x0A	; 10
 2e8:	98 9e       	mul	r9, r24
 2ea:	20 0d       	add	r18, r0
 2ec:	11 24       	eor	r1, r1
 2ee:	92 2e       	mov	r9, r18
 2f0:	11 c0       	rjmp	.+34     	; 0x314 <vfprintf+0xe2>
 2f2:	ea e0       	ldi	r30, 0x0A	; 10
 2f4:	2e 9e       	mul	r2, r30
 2f6:	20 0d       	add	r18, r0
 2f8:	11 24       	eor	r1, r1
 2fa:	22 2e       	mov	r2, r18
 2fc:	f3 2d       	mov	r31, r3
 2fe:	f0 62       	ori	r31, 0x20	; 32
 300:	3f 2e       	mov	r3, r31
 302:	08 c0       	rjmp	.+16     	; 0x314 <vfprintf+0xe2>
 304:	8c 36       	cpi	r24, 0x6C	; 108
 306:	21 f4       	brne	.+8      	; 0x310 <vfprintf+0xde>
 308:	83 2d       	mov	r24, r3
 30a:	80 68       	ori	r24, 0x80	; 128
 30c:	38 2e       	mov	r3, r24
 30e:	02 c0       	rjmp	.+4      	; 0x314 <vfprintf+0xe2>
 310:	88 36       	cpi	r24, 0x68	; 104
 312:	41 f4       	brne	.+16     	; 0x324 <vfprintf+0xf2>
 314:	f7 01       	movw	r30, r14
 316:	93 fd       	sbrc	r25, 3
 318:	85 91       	lpm	r24, Z+
 31a:	93 ff       	sbrs	r25, 3
 31c:	81 91       	ld	r24, Z+
 31e:	7f 01       	movw	r14, r30
 320:	81 11       	cpse	r24, r1
 322:	b3 cf       	rjmp	.-154    	; 0x28a <vfprintf+0x58>
 324:	98 2f       	mov	r25, r24
 326:	9f 7d       	andi	r25, 0xDF	; 223
 328:	95 54       	subi	r25, 0x45	; 69
 32a:	93 30       	cpi	r25, 0x03	; 3
 32c:	28 f4       	brcc	.+10     	; 0x338 <vfprintf+0x106>
 32e:	0c 5f       	subi	r16, 0xFC	; 252
 330:	1f 4f       	sbci	r17, 0xFF	; 255
 332:	9f e3       	ldi	r25, 0x3F	; 63
 334:	99 83       	std	Y+1, r25	; 0x01
 336:	0d c0       	rjmp	.+26     	; 0x352 <vfprintf+0x120>
 338:	83 36       	cpi	r24, 0x63	; 99
 33a:	31 f0       	breq	.+12     	; 0x348 <vfprintf+0x116>
 33c:	83 37       	cpi	r24, 0x73	; 115
 33e:	71 f0       	breq	.+28     	; 0x35c <vfprintf+0x12a>
 340:	83 35       	cpi	r24, 0x53	; 83
 342:	09 f0       	breq	.+2      	; 0x346 <vfprintf+0x114>
 344:	55 c0       	rjmp	.+170    	; 0x3f0 <vfprintf+0x1be>
 346:	20 c0       	rjmp	.+64     	; 0x388 <vfprintf+0x156>
 348:	f8 01       	movw	r30, r16
 34a:	80 81       	ld	r24, Z
 34c:	89 83       	std	Y+1, r24	; 0x01
 34e:	0e 5f       	subi	r16, 0xFE	; 254
 350:	1f 4f       	sbci	r17, 0xFF	; 255
 352:	88 24       	eor	r8, r8
 354:	83 94       	inc	r8
 356:	91 2c       	mov	r9, r1
 358:	53 01       	movw	r10, r6
 35a:	12 c0       	rjmp	.+36     	; 0x380 <vfprintf+0x14e>
 35c:	28 01       	movw	r4, r16
 35e:	f2 e0       	ldi	r31, 0x02	; 2
 360:	4f 0e       	add	r4, r31
 362:	51 1c       	adc	r5, r1
 364:	f8 01       	movw	r30, r16
 366:	a0 80       	ld	r10, Z
 368:	b1 80       	ldd	r11, Z+1	; 0x01
 36a:	36 fe       	sbrs	r3, 6
 36c:	03 c0       	rjmp	.+6      	; 0x374 <vfprintf+0x142>
 36e:	69 2d       	mov	r22, r9
 370:	70 e0       	ldi	r23, 0x00	; 0
 372:	02 c0       	rjmp	.+4      	; 0x378 <vfprintf+0x146>
 374:	6f ef       	ldi	r22, 0xFF	; 255
 376:	7f ef       	ldi	r23, 0xFF	; 255
 378:	c5 01       	movw	r24, r10
 37a:	38 d1       	rcall	.+624    	; 0x5ec <strnlen>
 37c:	4c 01       	movw	r8, r24
 37e:	82 01       	movw	r16, r4
 380:	f3 2d       	mov	r31, r3
 382:	ff 77       	andi	r31, 0x7F	; 127
 384:	3f 2e       	mov	r3, r31
 386:	15 c0       	rjmp	.+42     	; 0x3b2 <vfprintf+0x180>
 388:	28 01       	movw	r4, r16
 38a:	22 e0       	ldi	r18, 0x02	; 2
 38c:	42 0e       	add	r4, r18
 38e:	51 1c       	adc	r5, r1
 390:	f8 01       	movw	r30, r16
 392:	a0 80       	ld	r10, Z
 394:	b1 80       	ldd	r11, Z+1	; 0x01
 396:	36 fe       	sbrs	r3, 6
 398:	03 c0       	rjmp	.+6      	; 0x3a0 <vfprintf+0x16e>
 39a:	69 2d       	mov	r22, r9
 39c:	70 e0       	ldi	r23, 0x00	; 0
 39e:	02 c0       	rjmp	.+4      	; 0x3a4 <vfprintf+0x172>
 3a0:	6f ef       	ldi	r22, 0xFF	; 255
 3a2:	7f ef       	ldi	r23, 0xFF	; 255
 3a4:	c5 01       	movw	r24, r10
 3a6:	17 d1       	rcall	.+558    	; 0x5d6 <strnlen_P>
 3a8:	4c 01       	movw	r8, r24
 3aa:	f3 2d       	mov	r31, r3
 3ac:	f0 68       	ori	r31, 0x80	; 128
 3ae:	3f 2e       	mov	r3, r31
 3b0:	82 01       	movw	r16, r4
 3b2:	33 fc       	sbrc	r3, 3
 3b4:	19 c0       	rjmp	.+50     	; 0x3e8 <vfprintf+0x1b6>
 3b6:	82 2d       	mov	r24, r2
 3b8:	90 e0       	ldi	r25, 0x00	; 0
 3ba:	88 16       	cp	r8, r24
 3bc:	99 06       	cpc	r9, r25
 3be:	a0 f4       	brcc	.+40     	; 0x3e8 <vfprintf+0x1b6>
 3c0:	b6 01       	movw	r22, r12
 3c2:	80 e2       	ldi	r24, 0x20	; 32
 3c4:	90 e0       	ldi	r25, 0x00	; 0
 3c6:	1d d1       	rcall	.+570    	; 0x602 <fputc>
 3c8:	2a 94       	dec	r2
 3ca:	f5 cf       	rjmp	.-22     	; 0x3b6 <vfprintf+0x184>
 3cc:	f5 01       	movw	r30, r10
 3ce:	37 fc       	sbrc	r3, 7
 3d0:	85 91       	lpm	r24, Z+
 3d2:	37 fe       	sbrs	r3, 7
 3d4:	81 91       	ld	r24, Z+
 3d6:	5f 01       	movw	r10, r30
 3d8:	b6 01       	movw	r22, r12
 3da:	90 e0       	ldi	r25, 0x00	; 0
 3dc:	12 d1       	rcall	.+548    	; 0x602 <fputc>
 3de:	21 10       	cpse	r2, r1
 3e0:	2a 94       	dec	r2
 3e2:	21 e0       	ldi	r18, 0x01	; 1
 3e4:	82 1a       	sub	r8, r18
 3e6:	91 08       	sbc	r9, r1
 3e8:	81 14       	cp	r8, r1
 3ea:	91 04       	cpc	r9, r1
 3ec:	79 f7       	brne	.-34     	; 0x3cc <vfprintf+0x19a>
 3ee:	e1 c0       	rjmp	.+450    	; 0x5b2 <__stack+0x153>
 3f0:	84 36       	cpi	r24, 0x64	; 100
 3f2:	11 f0       	breq	.+4      	; 0x3f8 <vfprintf+0x1c6>
 3f4:	89 36       	cpi	r24, 0x69	; 105
 3f6:	39 f5       	brne	.+78     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 3f8:	f8 01       	movw	r30, r16
 3fa:	37 fe       	sbrs	r3, 7
 3fc:	07 c0       	rjmp	.+14     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 3fe:	60 81       	ld	r22, Z
 400:	71 81       	ldd	r23, Z+1	; 0x01
 402:	82 81       	ldd	r24, Z+2	; 0x02
 404:	93 81       	ldd	r25, Z+3	; 0x03
 406:	0c 5f       	subi	r16, 0xFC	; 252
 408:	1f 4f       	sbci	r17, 0xFF	; 255
 40a:	08 c0       	rjmp	.+16     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 40c:	60 81       	ld	r22, Z
 40e:	71 81       	ldd	r23, Z+1	; 0x01
 410:	07 2e       	mov	r0, r23
 412:	00 0c       	add	r0, r0
 414:	88 0b       	sbc	r24, r24
 416:	99 0b       	sbc	r25, r25
 418:	0e 5f       	subi	r16, 0xFE	; 254
 41a:	1f 4f       	sbci	r17, 0xFF	; 255
 41c:	f3 2d       	mov	r31, r3
 41e:	ff 76       	andi	r31, 0x6F	; 111
 420:	3f 2e       	mov	r3, r31
 422:	97 ff       	sbrs	r25, 7
 424:	09 c0       	rjmp	.+18     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 426:	90 95       	com	r25
 428:	80 95       	com	r24
 42a:	70 95       	com	r23
 42c:	61 95       	neg	r22
 42e:	7f 4f       	sbci	r23, 0xFF	; 255
 430:	8f 4f       	sbci	r24, 0xFF	; 255
 432:	9f 4f       	sbci	r25, 0xFF	; 255
 434:	f0 68       	ori	r31, 0x80	; 128
 436:	3f 2e       	mov	r3, r31
 438:	2a e0       	ldi	r18, 0x0A	; 10
 43a:	30 e0       	ldi	r19, 0x00	; 0
 43c:	a3 01       	movw	r20, r6
 43e:	1d d1       	rcall	.+570    	; 0x67a <__ultoa_invert>
 440:	88 2e       	mov	r8, r24
 442:	86 18       	sub	r8, r6
 444:	44 c0       	rjmp	.+136    	; 0x4ce <__stack+0x6f>
 446:	85 37       	cpi	r24, 0x75	; 117
 448:	31 f4       	brne	.+12     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 44a:	23 2d       	mov	r18, r3
 44c:	2f 7e       	andi	r18, 0xEF	; 239
 44e:	b2 2e       	mov	r11, r18
 450:	2a e0       	ldi	r18, 0x0A	; 10
 452:	30 e0       	ldi	r19, 0x00	; 0
 454:	25 c0       	rjmp	.+74     	; 0x4a0 <__stack+0x41>
 456:	93 2d       	mov	r25, r3
 458:	99 7f       	andi	r25, 0xF9	; 249
 45a:	b9 2e       	mov	r11, r25
 45c:	8f 36       	cpi	r24, 0x6F	; 111
 45e:	c1 f0       	breq	.+48     	; 0x490 <__stack+0x31>
 460:	18 f4       	brcc	.+6      	; 0x468 <__stack+0x9>
 462:	88 35       	cpi	r24, 0x58	; 88
 464:	79 f0       	breq	.+30     	; 0x484 <__stack+0x25>
 466:	ae c0       	rjmp	.+348    	; 0x5c4 <__stack+0x165>
 468:	80 37       	cpi	r24, 0x70	; 112
 46a:	19 f0       	breq	.+6      	; 0x472 <__stack+0x13>
 46c:	88 37       	cpi	r24, 0x78	; 120
 46e:	21 f0       	breq	.+8      	; 0x478 <__stack+0x19>
 470:	a9 c0       	rjmp	.+338    	; 0x5c4 <__stack+0x165>
 472:	e9 2f       	mov	r30, r25
 474:	e0 61       	ori	r30, 0x10	; 16
 476:	be 2e       	mov	r11, r30
 478:	b4 fe       	sbrs	r11, 4
 47a:	0d c0       	rjmp	.+26     	; 0x496 <__stack+0x37>
 47c:	fb 2d       	mov	r31, r11
 47e:	f4 60       	ori	r31, 0x04	; 4
 480:	bf 2e       	mov	r11, r31
 482:	09 c0       	rjmp	.+18     	; 0x496 <__stack+0x37>
 484:	34 fe       	sbrs	r3, 4
 486:	0a c0       	rjmp	.+20     	; 0x49c <__stack+0x3d>
 488:	29 2f       	mov	r18, r25
 48a:	26 60       	ori	r18, 0x06	; 6
 48c:	b2 2e       	mov	r11, r18
 48e:	06 c0       	rjmp	.+12     	; 0x49c <__stack+0x3d>
 490:	28 e0       	ldi	r18, 0x08	; 8
 492:	30 e0       	ldi	r19, 0x00	; 0
 494:	05 c0       	rjmp	.+10     	; 0x4a0 <__stack+0x41>
 496:	20 e1       	ldi	r18, 0x10	; 16
 498:	30 e0       	ldi	r19, 0x00	; 0
 49a:	02 c0       	rjmp	.+4      	; 0x4a0 <__stack+0x41>
 49c:	20 e1       	ldi	r18, 0x10	; 16
 49e:	32 e0       	ldi	r19, 0x02	; 2
 4a0:	f8 01       	movw	r30, r16
 4a2:	b7 fe       	sbrs	r11, 7
 4a4:	07 c0       	rjmp	.+14     	; 0x4b4 <__stack+0x55>
 4a6:	60 81       	ld	r22, Z
 4a8:	71 81       	ldd	r23, Z+1	; 0x01
 4aa:	82 81       	ldd	r24, Z+2	; 0x02
 4ac:	93 81       	ldd	r25, Z+3	; 0x03
 4ae:	0c 5f       	subi	r16, 0xFC	; 252
 4b0:	1f 4f       	sbci	r17, 0xFF	; 255
 4b2:	06 c0       	rjmp	.+12     	; 0x4c0 <__stack+0x61>
 4b4:	60 81       	ld	r22, Z
 4b6:	71 81       	ldd	r23, Z+1	; 0x01
 4b8:	80 e0       	ldi	r24, 0x00	; 0
 4ba:	90 e0       	ldi	r25, 0x00	; 0
 4bc:	0e 5f       	subi	r16, 0xFE	; 254
 4be:	1f 4f       	sbci	r17, 0xFF	; 255
 4c0:	a3 01       	movw	r20, r6
 4c2:	db d0       	rcall	.+438    	; 0x67a <__ultoa_invert>
 4c4:	88 2e       	mov	r8, r24
 4c6:	86 18       	sub	r8, r6
 4c8:	fb 2d       	mov	r31, r11
 4ca:	ff 77       	andi	r31, 0x7F	; 127
 4cc:	3f 2e       	mov	r3, r31
 4ce:	36 fe       	sbrs	r3, 6
 4d0:	0d c0       	rjmp	.+26     	; 0x4ec <__stack+0x8d>
 4d2:	23 2d       	mov	r18, r3
 4d4:	2e 7f       	andi	r18, 0xFE	; 254
 4d6:	a2 2e       	mov	r10, r18
 4d8:	89 14       	cp	r8, r9
 4da:	58 f4       	brcc	.+22     	; 0x4f2 <__stack+0x93>
 4dc:	34 fe       	sbrs	r3, 4
 4de:	0b c0       	rjmp	.+22     	; 0x4f6 <__stack+0x97>
 4e0:	32 fc       	sbrc	r3, 2
 4e2:	09 c0       	rjmp	.+18     	; 0x4f6 <__stack+0x97>
 4e4:	83 2d       	mov	r24, r3
 4e6:	8e 7e       	andi	r24, 0xEE	; 238
 4e8:	a8 2e       	mov	r10, r24
 4ea:	05 c0       	rjmp	.+10     	; 0x4f6 <__stack+0x97>
 4ec:	b8 2c       	mov	r11, r8
 4ee:	a3 2c       	mov	r10, r3
 4f0:	03 c0       	rjmp	.+6      	; 0x4f8 <__stack+0x99>
 4f2:	b8 2c       	mov	r11, r8
 4f4:	01 c0       	rjmp	.+2      	; 0x4f8 <__stack+0x99>
 4f6:	b9 2c       	mov	r11, r9
 4f8:	a4 fe       	sbrs	r10, 4
 4fa:	0f c0       	rjmp	.+30     	; 0x51a <__stack+0xbb>
 4fc:	fe 01       	movw	r30, r28
 4fe:	e8 0d       	add	r30, r8
 500:	f1 1d       	adc	r31, r1
 502:	80 81       	ld	r24, Z
 504:	80 33       	cpi	r24, 0x30	; 48
 506:	21 f4       	brne	.+8      	; 0x510 <__stack+0xb1>
 508:	9a 2d       	mov	r25, r10
 50a:	99 7e       	andi	r25, 0xE9	; 233
 50c:	a9 2e       	mov	r10, r25
 50e:	09 c0       	rjmp	.+18     	; 0x522 <__stack+0xc3>
 510:	a2 fe       	sbrs	r10, 2
 512:	06 c0       	rjmp	.+12     	; 0x520 <__stack+0xc1>
 514:	b3 94       	inc	r11
 516:	b3 94       	inc	r11
 518:	04 c0       	rjmp	.+8      	; 0x522 <__stack+0xc3>
 51a:	8a 2d       	mov	r24, r10
 51c:	86 78       	andi	r24, 0x86	; 134
 51e:	09 f0       	breq	.+2      	; 0x522 <__stack+0xc3>
 520:	b3 94       	inc	r11
 522:	a3 fc       	sbrc	r10, 3
 524:	10 c0       	rjmp	.+32     	; 0x546 <__stack+0xe7>
 526:	a0 fe       	sbrs	r10, 0
 528:	06 c0       	rjmp	.+12     	; 0x536 <__stack+0xd7>
 52a:	b2 14       	cp	r11, r2
 52c:	80 f4       	brcc	.+32     	; 0x54e <__stack+0xef>
 52e:	28 0c       	add	r2, r8
 530:	92 2c       	mov	r9, r2
 532:	9b 18       	sub	r9, r11
 534:	0d c0       	rjmp	.+26     	; 0x550 <__stack+0xf1>
 536:	b2 14       	cp	r11, r2
 538:	58 f4       	brcc	.+22     	; 0x550 <__stack+0xf1>
 53a:	b6 01       	movw	r22, r12
 53c:	80 e2       	ldi	r24, 0x20	; 32
 53e:	90 e0       	ldi	r25, 0x00	; 0
 540:	60 d0       	rcall	.+192    	; 0x602 <fputc>
 542:	b3 94       	inc	r11
 544:	f8 cf       	rjmp	.-16     	; 0x536 <__stack+0xd7>
 546:	b2 14       	cp	r11, r2
 548:	18 f4       	brcc	.+6      	; 0x550 <__stack+0xf1>
 54a:	2b 18       	sub	r2, r11
 54c:	02 c0       	rjmp	.+4      	; 0x552 <__stack+0xf3>
 54e:	98 2c       	mov	r9, r8
 550:	21 2c       	mov	r2, r1
 552:	a4 fe       	sbrs	r10, 4
 554:	0f c0       	rjmp	.+30     	; 0x574 <__stack+0x115>
 556:	b6 01       	movw	r22, r12
 558:	80 e3       	ldi	r24, 0x30	; 48
 55a:	90 e0       	ldi	r25, 0x00	; 0
 55c:	52 d0       	rcall	.+164    	; 0x602 <fputc>
 55e:	a2 fe       	sbrs	r10, 2
 560:	16 c0       	rjmp	.+44     	; 0x58e <__stack+0x12f>
 562:	a1 fc       	sbrc	r10, 1
 564:	03 c0       	rjmp	.+6      	; 0x56c <__stack+0x10d>
 566:	88 e7       	ldi	r24, 0x78	; 120
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	02 c0       	rjmp	.+4      	; 0x570 <__stack+0x111>
 56c:	88 e5       	ldi	r24, 0x58	; 88
 56e:	90 e0       	ldi	r25, 0x00	; 0
 570:	b6 01       	movw	r22, r12
 572:	0c c0       	rjmp	.+24     	; 0x58c <__stack+0x12d>
 574:	8a 2d       	mov	r24, r10
 576:	86 78       	andi	r24, 0x86	; 134
 578:	51 f0       	breq	.+20     	; 0x58e <__stack+0x12f>
 57a:	a1 fe       	sbrs	r10, 1
 57c:	02 c0       	rjmp	.+4      	; 0x582 <__stack+0x123>
 57e:	8b e2       	ldi	r24, 0x2B	; 43
 580:	01 c0       	rjmp	.+2      	; 0x584 <__stack+0x125>
 582:	80 e2       	ldi	r24, 0x20	; 32
 584:	a7 fc       	sbrc	r10, 7
 586:	8d e2       	ldi	r24, 0x2D	; 45
 588:	b6 01       	movw	r22, r12
 58a:	90 e0       	ldi	r25, 0x00	; 0
 58c:	3a d0       	rcall	.+116    	; 0x602 <fputc>
 58e:	89 14       	cp	r8, r9
 590:	30 f4       	brcc	.+12     	; 0x59e <__stack+0x13f>
 592:	b6 01       	movw	r22, r12
 594:	80 e3       	ldi	r24, 0x30	; 48
 596:	90 e0       	ldi	r25, 0x00	; 0
 598:	34 d0       	rcall	.+104    	; 0x602 <fputc>
 59a:	9a 94       	dec	r9
 59c:	f8 cf       	rjmp	.-16     	; 0x58e <__stack+0x12f>
 59e:	8a 94       	dec	r8
 5a0:	f3 01       	movw	r30, r6
 5a2:	e8 0d       	add	r30, r8
 5a4:	f1 1d       	adc	r31, r1
 5a6:	80 81       	ld	r24, Z
 5a8:	b6 01       	movw	r22, r12
 5aa:	90 e0       	ldi	r25, 0x00	; 0
 5ac:	2a d0       	rcall	.+84     	; 0x602 <fputc>
 5ae:	81 10       	cpse	r8, r1
 5b0:	f6 cf       	rjmp	.-20     	; 0x59e <__stack+0x13f>
 5b2:	22 20       	and	r2, r2
 5b4:	09 f4       	brne	.+2      	; 0x5b8 <__stack+0x159>
 5b6:	4e ce       	rjmp	.-868    	; 0x254 <vfprintf+0x22>
 5b8:	b6 01       	movw	r22, r12
 5ba:	80 e2       	ldi	r24, 0x20	; 32
 5bc:	90 e0       	ldi	r25, 0x00	; 0
 5be:	21 d0       	rcall	.+66     	; 0x602 <fputc>
 5c0:	2a 94       	dec	r2
 5c2:	f7 cf       	rjmp	.-18     	; 0x5b2 <__stack+0x153>
 5c4:	f6 01       	movw	r30, r12
 5c6:	86 81       	ldd	r24, Z+6	; 0x06
 5c8:	97 81       	ldd	r25, Z+7	; 0x07
 5ca:	02 c0       	rjmp	.+4      	; 0x5d0 <__stack+0x171>
 5cc:	8f ef       	ldi	r24, 0xFF	; 255
 5ce:	9f ef       	ldi	r25, 0xFF	; 255
 5d0:	2b 96       	adiw	r28, 0x0b	; 11
 5d2:	e2 e1       	ldi	r30, 0x12	; 18
 5d4:	cc c0       	rjmp	.+408    	; 0x76e <__epilogue_restores__>

000005d6 <strnlen_P>:
 5d6:	fc 01       	movw	r30, r24
 5d8:	05 90       	lpm	r0, Z+
 5da:	61 50       	subi	r22, 0x01	; 1
 5dc:	70 40       	sbci	r23, 0x00	; 0
 5de:	01 10       	cpse	r0, r1
 5e0:	d8 f7       	brcc	.-10     	; 0x5d8 <strnlen_P+0x2>
 5e2:	80 95       	com	r24
 5e4:	90 95       	com	r25
 5e6:	8e 0f       	add	r24, r30
 5e8:	9f 1f       	adc	r25, r31
 5ea:	08 95       	ret

000005ec <strnlen>:
 5ec:	fc 01       	movw	r30, r24
 5ee:	61 50       	subi	r22, 0x01	; 1
 5f0:	70 40       	sbci	r23, 0x00	; 0
 5f2:	01 90       	ld	r0, Z+
 5f4:	01 10       	cpse	r0, r1
 5f6:	d8 f7       	brcc	.-10     	; 0x5ee <strnlen+0x2>
 5f8:	80 95       	com	r24
 5fa:	90 95       	com	r25
 5fc:	8e 0f       	add	r24, r30
 5fe:	9f 1f       	adc	r25, r31
 600:	08 95       	ret

00000602 <fputc>:
 602:	0f 93       	push	r16
 604:	1f 93       	push	r17
 606:	cf 93       	push	r28
 608:	df 93       	push	r29
 60a:	fb 01       	movw	r30, r22
 60c:	23 81       	ldd	r18, Z+3	; 0x03
 60e:	21 fd       	sbrc	r18, 1
 610:	03 c0       	rjmp	.+6      	; 0x618 <fputc+0x16>
 612:	8f ef       	ldi	r24, 0xFF	; 255
 614:	9f ef       	ldi	r25, 0xFF	; 255
 616:	2c c0       	rjmp	.+88     	; 0x670 <fputc+0x6e>
 618:	22 ff       	sbrs	r18, 2
 61a:	16 c0       	rjmp	.+44     	; 0x648 <fputc+0x46>
 61c:	46 81       	ldd	r20, Z+6	; 0x06
 61e:	57 81       	ldd	r21, Z+7	; 0x07
 620:	24 81       	ldd	r18, Z+4	; 0x04
 622:	35 81       	ldd	r19, Z+5	; 0x05
 624:	42 17       	cp	r20, r18
 626:	53 07       	cpc	r21, r19
 628:	44 f4       	brge	.+16     	; 0x63a <fputc+0x38>
 62a:	a0 81       	ld	r26, Z
 62c:	b1 81       	ldd	r27, Z+1	; 0x01
 62e:	9d 01       	movw	r18, r26
 630:	2f 5f       	subi	r18, 0xFF	; 255
 632:	3f 4f       	sbci	r19, 0xFF	; 255
 634:	31 83       	std	Z+1, r19	; 0x01
 636:	20 83       	st	Z, r18
 638:	8c 93       	st	X, r24
 63a:	26 81       	ldd	r18, Z+6	; 0x06
 63c:	37 81       	ldd	r19, Z+7	; 0x07
 63e:	2f 5f       	subi	r18, 0xFF	; 255
 640:	3f 4f       	sbci	r19, 0xFF	; 255
 642:	37 83       	std	Z+7, r19	; 0x07
 644:	26 83       	std	Z+6, r18	; 0x06
 646:	14 c0       	rjmp	.+40     	; 0x670 <fputc+0x6e>
 648:	8b 01       	movw	r16, r22
 64a:	ec 01       	movw	r28, r24
 64c:	fb 01       	movw	r30, r22
 64e:	00 84       	ldd	r0, Z+8	; 0x08
 650:	f1 85       	ldd	r31, Z+9	; 0x09
 652:	e0 2d       	mov	r30, r0
 654:	09 95       	icall
 656:	89 2b       	or	r24, r25
 658:	e1 f6       	brne	.-72     	; 0x612 <fputc+0x10>
 65a:	d8 01       	movw	r26, r16
 65c:	16 96       	adiw	r26, 0x06	; 6
 65e:	8d 91       	ld	r24, X+
 660:	9c 91       	ld	r25, X
 662:	17 97       	sbiw	r26, 0x07	; 7
 664:	01 96       	adiw	r24, 0x01	; 1
 666:	17 96       	adiw	r26, 0x07	; 7
 668:	9c 93       	st	X, r25
 66a:	8e 93       	st	-X, r24
 66c:	16 97       	sbiw	r26, 0x06	; 6
 66e:	ce 01       	movw	r24, r28
 670:	df 91       	pop	r29
 672:	cf 91       	pop	r28
 674:	1f 91       	pop	r17
 676:	0f 91       	pop	r16
 678:	08 95       	ret

0000067a <__ultoa_invert>:
 67a:	fa 01       	movw	r30, r20
 67c:	aa 27       	eor	r26, r26
 67e:	28 30       	cpi	r18, 0x08	; 8
 680:	51 f1       	breq	.+84     	; 0x6d6 <__ultoa_invert+0x5c>
 682:	20 31       	cpi	r18, 0x10	; 16
 684:	81 f1       	breq	.+96     	; 0x6e6 <__ultoa_invert+0x6c>
 686:	e8 94       	clt
 688:	6f 93       	push	r22
 68a:	6e 7f       	andi	r22, 0xFE	; 254
 68c:	6e 5f       	subi	r22, 0xFE	; 254
 68e:	7f 4f       	sbci	r23, 0xFF	; 255
 690:	8f 4f       	sbci	r24, 0xFF	; 255
 692:	9f 4f       	sbci	r25, 0xFF	; 255
 694:	af 4f       	sbci	r26, 0xFF	; 255
 696:	b1 e0       	ldi	r27, 0x01	; 1
 698:	3e d0       	rcall	.+124    	; 0x716 <__ultoa_invert+0x9c>
 69a:	b4 e0       	ldi	r27, 0x04	; 4
 69c:	3c d0       	rcall	.+120    	; 0x716 <__ultoa_invert+0x9c>
 69e:	67 0f       	add	r22, r23
 6a0:	78 1f       	adc	r23, r24
 6a2:	89 1f       	adc	r24, r25
 6a4:	9a 1f       	adc	r25, r26
 6a6:	a1 1d       	adc	r26, r1
 6a8:	68 0f       	add	r22, r24
 6aa:	79 1f       	adc	r23, r25
 6ac:	8a 1f       	adc	r24, r26
 6ae:	91 1d       	adc	r25, r1
 6b0:	a1 1d       	adc	r26, r1
 6b2:	6a 0f       	add	r22, r26
 6b4:	71 1d       	adc	r23, r1
 6b6:	81 1d       	adc	r24, r1
 6b8:	91 1d       	adc	r25, r1
 6ba:	a1 1d       	adc	r26, r1
 6bc:	20 d0       	rcall	.+64     	; 0x6fe <__ultoa_invert+0x84>
 6be:	09 f4       	brne	.+2      	; 0x6c2 <__ultoa_invert+0x48>
 6c0:	68 94       	set
 6c2:	3f 91       	pop	r19
 6c4:	2a e0       	ldi	r18, 0x0A	; 10
 6c6:	26 9f       	mul	r18, r22
 6c8:	11 24       	eor	r1, r1
 6ca:	30 19       	sub	r19, r0
 6cc:	30 5d       	subi	r19, 0xD0	; 208
 6ce:	31 93       	st	Z+, r19
 6d0:	de f6       	brtc	.-74     	; 0x688 <__ultoa_invert+0xe>
 6d2:	cf 01       	movw	r24, r30
 6d4:	08 95       	ret
 6d6:	46 2f       	mov	r20, r22
 6d8:	47 70       	andi	r20, 0x07	; 7
 6da:	40 5d       	subi	r20, 0xD0	; 208
 6dc:	41 93       	st	Z+, r20
 6de:	b3 e0       	ldi	r27, 0x03	; 3
 6e0:	0f d0       	rcall	.+30     	; 0x700 <__ultoa_invert+0x86>
 6e2:	c9 f7       	brne	.-14     	; 0x6d6 <__ultoa_invert+0x5c>
 6e4:	f6 cf       	rjmp	.-20     	; 0x6d2 <__ultoa_invert+0x58>
 6e6:	46 2f       	mov	r20, r22
 6e8:	4f 70       	andi	r20, 0x0F	; 15
 6ea:	40 5d       	subi	r20, 0xD0	; 208
 6ec:	4a 33       	cpi	r20, 0x3A	; 58
 6ee:	18 f0       	brcs	.+6      	; 0x6f6 <__ultoa_invert+0x7c>
 6f0:	49 5d       	subi	r20, 0xD9	; 217
 6f2:	31 fd       	sbrc	r19, 1
 6f4:	40 52       	subi	r20, 0x20	; 32
 6f6:	41 93       	st	Z+, r20
 6f8:	02 d0       	rcall	.+4      	; 0x6fe <__ultoa_invert+0x84>
 6fa:	a9 f7       	brne	.-22     	; 0x6e6 <__ultoa_invert+0x6c>
 6fc:	ea cf       	rjmp	.-44     	; 0x6d2 <__ultoa_invert+0x58>
 6fe:	b4 e0       	ldi	r27, 0x04	; 4
 700:	a6 95       	lsr	r26
 702:	97 95       	ror	r25
 704:	87 95       	ror	r24
 706:	77 95       	ror	r23
 708:	67 95       	ror	r22
 70a:	ba 95       	dec	r27
 70c:	c9 f7       	brne	.-14     	; 0x700 <__ultoa_invert+0x86>
 70e:	00 97       	sbiw	r24, 0x00	; 0
 710:	61 05       	cpc	r22, r1
 712:	71 05       	cpc	r23, r1
 714:	08 95       	ret
 716:	9b 01       	movw	r18, r22
 718:	ac 01       	movw	r20, r24
 71a:	0a 2e       	mov	r0, r26
 71c:	06 94       	lsr	r0
 71e:	57 95       	ror	r21
 720:	47 95       	ror	r20
 722:	37 95       	ror	r19
 724:	27 95       	ror	r18
 726:	ba 95       	dec	r27
 728:	c9 f7       	brne	.-14     	; 0x71c <__ultoa_invert+0xa2>
 72a:	62 0f       	add	r22, r18
 72c:	73 1f       	adc	r23, r19
 72e:	84 1f       	adc	r24, r20
 730:	95 1f       	adc	r25, r21
 732:	a0 1d       	adc	r26, r0
 734:	08 95       	ret

00000736 <__prologue_saves__>:
 736:	2f 92       	push	r2
 738:	3f 92       	push	r3
 73a:	4f 92       	push	r4
 73c:	5f 92       	push	r5
 73e:	6f 92       	push	r6
 740:	7f 92       	push	r7
 742:	8f 92       	push	r8
 744:	9f 92       	push	r9
 746:	af 92       	push	r10
 748:	bf 92       	push	r11
 74a:	cf 92       	push	r12
 74c:	df 92       	push	r13
 74e:	ef 92       	push	r14
 750:	ff 92       	push	r15
 752:	0f 93       	push	r16
 754:	1f 93       	push	r17
 756:	cf 93       	push	r28
 758:	df 93       	push	r29
 75a:	cd b7       	in	r28, 0x3d	; 61
 75c:	de b7       	in	r29, 0x3e	; 62
 75e:	ca 1b       	sub	r28, r26
 760:	db 0b       	sbc	r29, r27
 762:	0f b6       	in	r0, 0x3f	; 63
 764:	f8 94       	cli
 766:	de bf       	out	0x3e, r29	; 62
 768:	0f be       	out	0x3f, r0	; 63
 76a:	cd bf       	out	0x3d, r28	; 61
 76c:	09 94       	ijmp

0000076e <__epilogue_restores__>:
 76e:	2a 88       	ldd	r2, Y+18	; 0x12
 770:	39 88       	ldd	r3, Y+17	; 0x11
 772:	48 88       	ldd	r4, Y+16	; 0x10
 774:	5f 84       	ldd	r5, Y+15	; 0x0f
 776:	6e 84       	ldd	r6, Y+14	; 0x0e
 778:	7d 84       	ldd	r7, Y+13	; 0x0d
 77a:	8c 84       	ldd	r8, Y+12	; 0x0c
 77c:	9b 84       	ldd	r9, Y+11	; 0x0b
 77e:	aa 84       	ldd	r10, Y+10	; 0x0a
 780:	b9 84       	ldd	r11, Y+9	; 0x09
 782:	c8 84       	ldd	r12, Y+8	; 0x08
 784:	df 80       	ldd	r13, Y+7	; 0x07
 786:	ee 80       	ldd	r14, Y+6	; 0x06
 788:	fd 80       	ldd	r15, Y+5	; 0x05
 78a:	0c 81       	ldd	r16, Y+4	; 0x04
 78c:	1b 81       	ldd	r17, Y+3	; 0x03
 78e:	aa 81       	ldd	r26, Y+2	; 0x02
 790:	b9 81       	ldd	r27, Y+1	; 0x01
 792:	ce 0f       	add	r28, r30
 794:	d1 1d       	adc	r29, r1
 796:	0f b6       	in	r0, 0x3f	; 63
 798:	f8 94       	cli
 79a:	de bf       	out	0x3e, r29	; 62
 79c:	0f be       	out	0x3f, r0	; 63
 79e:	cd bf       	out	0x3d, r28	; 61
 7a0:	ed 01       	movw	r28, r26
 7a2:	08 95       	ret

000007a4 <_exit>:
 7a4:	f8 94       	cli

000007a6 <__stop_program>:
 7a6:	ff cf       	rjmp	.-2      	; 0x7a6 <__stop_program>
